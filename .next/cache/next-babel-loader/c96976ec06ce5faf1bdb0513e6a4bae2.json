{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { formatDate } from './formatDate';\nimport { resourcePathToBlogURL } from './resourcePathToBlogURL';\nexport var toPostMetaData = function toPostMetaData(frontMatter) {\n  return _objectSpread(_objectSpread({}, frontMatter), {}, {\n    date: formatDate(frontMatter.date, 'yyyy-MM-dd'),\n    url: resourcePathToBlogURL(frontMatter.__resourcePath)\n  });\n};","map":{"version":3,"sources":["/Users/andikaleonardo/Personal/CV-Outdated/src/utils/postMappings.ts"],"names":["formatDate","resourcePathToBlogURL","toPostMetaData","frontMatter","date","url","__resourcePath"],"mappings":";;;;;;AACA,SAASA,UAAT,QAA2B,cAA3B;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,WAAD;AAAA,yCACzBA,WADyB;AAE5BC,IAAAA,IAAI,EAAEJ,UAAU,CAACG,WAAW,CAACC,IAAb,EAAmB,YAAnB,CAFY;AAG5BC,IAAAA,GAAG,EAAEJ,qBAAqB,CAACE,WAAW,CAACG,cAAb;AAHE;AAAA,CAAvB","sourcesContent":["import { PostFrontMatter, PostMetaData } from '../types/FrontMatter';\nimport { formatDate } from './formatDate';\nimport { resourcePathToBlogURL } from './resourcePathToBlogURL';\n\nexport const toPostMetaData = (frontMatter: PostFrontMatter): PostMetaData => ({\n  ...frontMatter,\n  date: formatDate(frontMatter.date, 'yyyy-MM-dd'),\n  url: resourcePathToBlogURL(frontMatter.__resourcePath),\n});\n"]},"metadata":{},"sourceType":"module"}