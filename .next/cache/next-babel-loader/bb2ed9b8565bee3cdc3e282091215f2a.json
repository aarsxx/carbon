{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andikaleonardo/Personal/CV-Outdated/src/context/ContentContext.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nconst ContentContext = /*#__PURE__*/React.createContext({\n  blogPosts: [],\n  projects: []\n});\nContentContext.displayName = 'ContentContext';\nexport const useContent = () => React.useContext(ContentContext);\nexport const ContentProvider = (_ref) => {\n  let {\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  const values = _objectSpread({}, rest);\n\n  return /*#__PURE__*/_jsxDEV(ContentContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\nContentProvider.displayName = 'ContentProvider';","map":{"version":3,"sources":["/Users/andikaleonardo/Personal/CV-Outdated/src/context/ContentContext.tsx"],"names":["React","ContentContext","createContext","blogPosts","projects","displayName","useContent","useContext","ContentProvider","children","rest","values"],"mappings":";;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAQA,MAAMC,cAAc,gBAAGD,KAAK,CAACE,aAAN,CAAyC;AAAEC,EAAAA,SAAS,EAAE,EAAb;AAAiBC,EAAAA,QAAQ,EAAE;AAA3B,CAAzC,CAAvB;AACAH,cAAc,CAACI,WAAf,GAA6B,gBAA7B;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAMN,KAAK,CAACO,UAAN,CAAiBN,cAAjB,CAAzB;AAEP,OAAO,MAAMO,eAA8C,GAAG,UAA2B;AAAA,MAA1B;AAAEC,IAAAA;AAAF,GAA0B;AAAA,MAAXC,IAAW;;AACvF,QAAMC,MAAM,qBAAQD,IAAR,CAAZ;;AACA,sBAAO,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEC,MAAhC;AAAA,cAAyCF;AAAzC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHM;AAKPD,eAAe,CAACH,WAAhB,GAA8B,iBAA9B","sourcesContent":["import { PostMetaData } from '../types/FrontMatter';\nimport * as React from 'react';\nimport { Project } from '../types/Project';\n\ninterface ContentContextValue {\n  blogPosts: PostMetaData[];\n  projects: Project[];\n}\n\nconst ContentContext = React.createContext<ContentContextValue>({ blogPosts: [], projects: [] });\nContentContext.displayName = 'ContentContext';\n\nexport const useContent = () => React.useContext(ContentContext);\n\nexport const ContentProvider: React.FC<ContentContextValue> = ({ children, ...rest }) => {\n  const values = { ...rest };\n  return <ContentContext.Provider value={values}>{children}</ContentContext.Provider>;\n};\n\nContentProvider.displayName = 'ContentProvider';\n"]},"metadata":{},"sourceType":"module"}