{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { IconAnimation } from '../../../../types/icon/iconAnimation';\nconst animationHover = {\n  whileHover: {\n    y: -2\n  },\n  whileTap: {\n    y: 0\n  },\n  transition: {\n    type: 'spring',\n    stiffness: 250,\n    damping: 10\n  }\n};\nconst animationRotateLeft = {\n  transition: {\n    type: 'spring',\n    stiffness: 100,\n    damping: 15\n  },\n  animate: {\n    rotate: -360\n  }\n};\n\nconst animationRotateRight = _objectSpread(_objectSpread({}, animationRotateLeft), {}, {\n  animate: {\n    rotate: 360\n  }\n});\n\nexport const iconAnimations = {\n  [IconAnimation.None]: {},\n  [IconAnimation.Hover]: animationHover,\n  [IconAnimation.RotateLeft]: animationRotateLeft,\n  [IconAnimation.RotateRight]: animationRotateRight\n};","map":{"version":3,"sources":["/Users/andikaleonardo/Personal/CV-Outdated/src/components/ui/icons/iconBase/iconAnimations.ts"],"names":["IconAnimation","animationHover","whileHover","y","whileTap","transition","type","stiffness","damping","animationRotateLeft","animate","rotate","animationRotateRight","iconAnimations","None","Hover","RotateLeft","RotateRight"],"mappings":";;;;;;AACA,SAASA,aAAT,QAA8B,sCAA9B;AAEA,MAAMC,cAA2B,GAAG;AAClCC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,CAAC,EAAE,CAAC;AAAN,GADsB;AAElCC,EAAAA,QAAQ,EAAE;AACRD,IAAAA,CAAC,EAAE;AADK,GAFwB;AAKlCE,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAE,QADI;AAEVC,IAAAA,SAAS,EAAE,GAFD;AAGVC,IAAAA,OAAO,EAAE;AAHC;AALsB,CAApC;AAYA,MAAMC,mBAAgC,GAAG;AACvCJ,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAE,QADI;AAEVC,IAAAA,SAAS,EAAE,GAFD;AAGVC,IAAAA,OAAO,EAAE;AAHC,GAD2B;AAMvCE,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE,CAAC;AADF;AAN8B,CAAzC;;AAWA,MAAMC,oBAAiC,mCAClCH,mBADkC;AAErCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE;AADD;AAF4B,EAAvC;;AAOA,OAAO,MAAME,cAAuD,GAAG;AACrE,GAACb,aAAa,CAACc,IAAf,GAAsB,EAD+C;AAErE,GAACd,aAAa,CAACe,KAAf,GAAuBd,cAF8C;AAGrE,GAACD,aAAa,CAACgB,UAAf,GAA4BP,mBAHyC;AAIrE,GAACT,aAAa,CAACiB,WAAf,GAA6BL;AAJwC,CAAhE","sourcesContent":["import { MotionProps } from 'framer-motion';\nimport { IconAnimation } from '../../../../types/icon/iconAnimation';\n\nconst animationHover: MotionProps = {\n  whileHover: { y: -2 },\n  whileTap: {\n    y: 0,\n  },\n  transition: {\n    type: 'spring',\n    stiffness: 250,\n    damping: 10,\n  },\n};\n\nconst animationRotateLeft: MotionProps = {\n  transition: {\n    type: 'spring',\n    stiffness: 100,\n    damping: 15,\n  },\n  animate: {\n    rotate: -360,\n  },\n};\n\nconst animationRotateRight: MotionProps = {\n  ...animationRotateLeft,\n  animate: {\n    rotate: 360,\n  },\n};\n\nexport const iconAnimations: { [key in IconAnimation]: MotionProps } = {\n  [IconAnimation.None]: {},\n  [IconAnimation.Hover]: animationHover,\n  [IconAnimation.RotateLeft]: animationRotateLeft,\n  [IconAnimation.RotateRight]: animationRotateRight,\n};\n"]},"metadata":{},"sourceType":"module"}