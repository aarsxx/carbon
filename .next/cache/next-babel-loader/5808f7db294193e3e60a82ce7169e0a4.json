{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/andikaleonardo/Personal/CV-Outdated/src/context/ThemeContext.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components';\nimport { ThemeContext } from 'styled-components';\nexport var ThemeProvider = function ThemeProvider(_ref) {\n  var children = _ref.children,\n      theme = _ref.theme;\n  return /*#__PURE__*/_jsxDEV(StyledThemeProvider, {\n    theme: theme,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, _this);\n};\n_c = ThemeProvider;\nThemeProvider.displayName = 'ThemeProvider';\nexport var useTheme = function useTheme() {\n  _s();\n\n  return React.useContext(ThemeContext);\n};\n\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/Users/andikaleonardo/Personal/CV-Outdated/src/context/ThemeContext.tsx"],"names":["React","ThemeProvider","StyledThemeProvider","ThemeContext","children","theme","displayName","useTheme","useContext"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAa,IAAIC,mBAA1B,QAAqD,mBAArD;AAEA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,OAAO,IAAMF,aAAiD,GAAG,SAApDA,aAAoD;AAAA,MAAGG,QAAH,QAAGA,QAAH;AAAA,MAAaC,KAAb,QAAaA,KAAb;AAAA,sBAC/D,QAAC,mBAAD;AAAqB,IAAA,KAAK,EAAEA,KAA5B;AAAA,cAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA,WAD+D;AAAA,CAA1D;KAAMH,a;AAEbA,aAAa,CAACK,WAAd,GAA4B,eAA5B;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;;AAAA,SAAqBP,KAAK,CAACQ,UAAN,CAAiBL,YAAjB,CAArB;AAAA,CAAjB;;GAAMI,Q","sourcesContent":["import * as React from 'react';\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components';\nimport { ThemeSettings } from '../types/theme/Theme';\nimport { ThemeContext } from 'styled-components';\n\nexport const ThemeProvider: React.FC<{ theme: ThemeSettings }> = ({ children, theme }) => \n  <StyledThemeProvider theme={theme}>{children}</StyledThemeProvider>;\nThemeProvider.displayName = 'ThemeProvider';\n\nexport const useTheme = (): ThemeSettings => React.useContext(ThemeContext);"]},"metadata":{},"sourceType":"module"}